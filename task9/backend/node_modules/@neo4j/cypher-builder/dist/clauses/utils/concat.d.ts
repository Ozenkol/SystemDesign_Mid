import type { CypherASTNode } from "../../CypherASTNode";
import type { CypherEnvironment } from "../../Environment";
import { Clause } from "../Clause";
/** The result of multiple clauses concatenated with {@link concat}
 * @category Clauses
 */
export declare class CompositeClause extends Clause {
    private readonly separator;
    private _children;
    /**
     * @internal
     */
    constructor(children: Array<Clause | undefined>, separator: string);
    concat(...clauses: Array<Clause | undefined>): this;
    get empty(): boolean;
    get children(): Array<CypherASTNode>;
    /** @internal */
    getCypher(env: CypherEnvironment, importWithCypher?: string): string;
    private filterClauses;
    private filterEmptyComposite;
    private unwrapComposite;
}
